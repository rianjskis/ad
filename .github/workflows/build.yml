name: Update SRS Rule

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 0 点 UTC
  workflow_dispatch:      # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y wget jq tar python3

      - name: Download latest sing-box (official release)
        run: |
          # 获取最新正式 release 的 tag
          SB_TAG=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r .tag_name)
          # 去掉前缀 v，得到文件名需要的版本号
          SB_VER=${SB_TAG#v}
          # 下载 Linux 64 位正式版
          wget -qO sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/${SB_TAG}/sing-box-${SB_VER}-linux-amd64.tar.gz"
          tar -xzf sing-box.tar.gz
          mv sing-box-${SB_VER}-linux-amd64/sing-box ./sing-box
          chmod +x ./sing-box

      # === 原有规则 ===
      - name: Download latest rule json
        run: |
          wget -qO AWAvenue-Ads-Rule-Singbox.json "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Singbox.json"

      - name: Convert json to srs
        run: |
          ./sing-box rule-set compile --output AWAvenue-Ads-Rule-Singbox.srs AWAvenue-Ads-Rule-Singbox.json

      # === 新增规则 ===
      - name: Download httpdns rule json
        run: |
          wget -qO httpdns.json "https://raw.githubusercontent.com/QuixoticHeart/rule-set/ruleset/singbox/version3/httpdns.json"

      - name: Split httpdns rule into domain and ip
        run: |
          cat > split_rules.py <<'PY'
import json, sys
from pathlib import Path
from copy import deepcopy

if len(sys.argv) != 4:
    print("Usage: split_rules.py IN_JSON OUT_DOMAIN_JSON OUT_IP_JSON", file=sys.stderr)
    sys.exit(2)

infile = Path(sys.argv[1])
out_domain = Path(sys.argv[2])
out_ip = Path(sys.argv[3])

data = json.loads(infile.read_text(encoding='utf-8'))
rules_key = "rules" if "rules" in data else ("rule" if "rule" in data else None)

if rules_key:
    rules = data[rules_key]
    top = {k: v for k, v in data.items() if k != rules_key}
elif isinstance(data, list):
    rules = data
    top = {}
else:
    rules = [data]
    top = {}

domain_fields = {"domain", "domain_suffix", "domain_keyword", "domain_regex", "domain_prefix"}
ip_fields = {"ip_cidr", "ip_is_private", "ip_range"}

domain_rules = []
ip_rules = []

for rule in rules:
    dom_part = {k: deepcopy(v) for k, v in rule.items() if k in domain_fields}
    ip_part = {k: deepcopy(v) for k, v in rule.items() if k in ip_fields}
    other_part = {k: deepcopy(v) for k, v in rule.items() if k not in domain_fields | ip_fields}

    if dom_part:
        dom_rule = deepcopy(other_part)
        dom_rule.update(dom_part)
        domain_rules.append(dom_rule)

    if ip_part:
        ip_rule = deepcopy(other_part)
        ip_rule.update(ip_part)
        ip_rules.append(ip_rule)

def build_out(top, rules_key_name, rules_list):
    if rules_key_name:
        out = dict(top)
        out[rules_key_name] = rules_list
        return out
    else:
        return rules_list

out_domain_data = build_out(top, rules_key, domain_rules)
out_ip_data = build_out(top, rules_key, ip_rules)

out_domain.write_text(json.dumps(out_domain_data, ensure_ascii=False, indent=2), encoding='utf-8')
out_ip.write_text(json.dumps(out_ip_data, ensure_ascii=False, indent=2), encoding='utf-8')

print(f"拆分完成 ✅")
print(f"域名规则数量: {len(domain_rules)}")
print(f"IP 规则数量: {len(ip_rules)}")
PY
          python3 split_rules.py httpdns.json httpdns-domain.json httpdns-ip.json

      - name: Compile domain and IP SRS files
        run: |
          ./sing-box rule-set compile --output httpdns-domain.srs httpdns-domain.json
          ./sing-box rule-set compile --output httpdns-ip.srs httpdns-ip.json

      # === 提交并推送所有变化 ===
      - name: Commit and push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add AWAvenue-Ads-Rule-Singbox.srs httpdns-domain.srs httpdns-ip.srs
          git commit -m "Update SRS rule $(date -u +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push

      - name: 删除工作流程运行
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          retain_days: 5
          keep_minimum_runs: 5
